- name: Collect only facts returned by facter
  hosts: all
  gather_facts: true  

  tasks:
          
     - name: Set static IP address
       win_shell: "(new-netipaddress -InterfaceAlias Ethernet -IPAddress {{ dc_address }} -prefixlength {{dc_netmask_cidr}} -defaultgateway {{ dc_gateway }})"
   
     - name: Set Password
       win_user:
         name: kam
         password: "{{dc_password}}"
         state: present
         delegate_to: '{{ dc_address }}'
         ignore_errors: True  

     - name: Set upstream DNS server 
       win_dns_client:
           adapter_names: '*'
           ipv4_addresses:
           - '{{ upstream_dns_1 }}'
           - '{{ upstream_dns_2 }}'
           delegate_to: '{{ dc_address }}'

     - name: Disable Domain firewall
       win_shell: "(Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled false)"
       delegate_to: '{{ dc_address }}'

     - name: Change the hostname 
       win_hostname:
         name: '{{ dc_hostname }}'
       register: res
       delegate_to: '{{ dc_address }}'

     - name: Reboot
       win_reboot:
       when: res.reboot_required   
       delegate_to: '{{ dc_address }}'
       
     - name: Join to the domain
       win_domain_membership:
         dns_domain_name: '{{ domain_name }}'
         domain_admin_user: "{{ domain_name }}\\{{ dn_user }}"
         domain_admin_password: "{{ dn_admin_pwd }}"
         state: domain
     
# Install ADDS feature
     - name: Install Active Directory domain services
       win_feature:
          name: AD-Domain-Services
          include_management_tools: yes
          include_sub_features: yes
          state: present
       register: domain_role
     - debug:
          msg: "{{ domain_role }}"
     
     - name: Pause for 10 seconds before promoting
       pause:
        seconds: 10
    
# Promote to DC and join specific site
     - name: Promote Domain Controller to exisiting domain
       win_domain_controller:
        dns_domain_name: "{{ domain_name }}"
        domain_admin_user: "{{ domain_name }}\\{{ dn_user }}"
        domain_admin_password: "{{ dn_admin_pwd }}"
        safe_mode_password: "{{ recovery_password }}"
        state: domain_controller
        site_name: '{{ dc_sitename }}'
       register: add_existing_dc_result 
           
     - name: ensure ADWS service is started
       win_service:
          name: ADWS
          state: started
          register: adws_service

     - name: Set internal DNS server 
       win_dns_client:
            adapter_names: '*'
            ipv4_addresses:
            - '127.0.0.1'
            - '{{ upstream_dns_1 }}'
            - '{{ upstream_dns_2 }}'
